{
  "flow_runs": [
    {
      "run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_0",
      "status": "Completed",
      "error": null,
      "inputs": {
        "chat_history": [],
        "question": "Which one is the most profitable product?"
      },
      "output": {
        "database_output": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
        "role": "assistant",
        "sql_query": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;"
      },
      "metrics": null,
      "request": null,
      "parent_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a",
      "root_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a",
      "source_run_id": null,
      "flow_id": "template_chat_flow",
      "start_time": "2024-08-19T04:23:18.100374Z",
      "end_time": "2024-08-19T04:23:25.669480Z",
      "index": 0,
      "api_calls": [
        {
          "name": "flow",
          "node_name": "flow",
          "type": "Flow",
          "start_time": 1724066598.100374,
          "end_time": 1724066605.66948,
          "children": [
            {
              "name": "AzureOpenAI.chat",
              "type": "Function",
              "inputs": {
                "prompt": "system:\nYou are an expert at writing SQL queries throught a given Natural Language description of OBJECTIVE from the user. \nThe following structure has the Table schema you MUST use to transform the input to a SQL query:\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), product_description TEXT, product_price DECIMAL(10, 2), product_category VARCHAR(50), in_stock BIT);\n\nCREATE TABLE sellers (seller_id INT PRIMARY KEY, seller_name VARCHAR(100), seller_email VARCHAR(100), seller_contact_number VARCHAR(15), seller_address TEXT);\n\nCREATE TABLE sales_transaction (transaction_id INT PRIMARY KEY, product_id INT, seller_id INT, quantity INT, transaction_date DATE, FOREIGN KEY (product_id) REFERENCES products(product_id), FOREIGN KEY (seller_id) REFERENCES sellers(seller_id));\n\n---\nYou will generate a SQL SELECT query that is compatible with Transact-SQL and achieves the given OBJECTIVE. \nYou use only the tables and views described in the given SCHEMA.\nThe output must be a SQL SELECT query.\nUse Postgres-SQL syntax to write the query compatible with Azure Postgresql Database syntax.\n\nChat history:\n{% for item in chat_history %}\n{{item}}\n{% endfor %}\n\nWhen exists a chat history, consider the last sql query to adapt the new ask.\n\nuser:\nTransform the input: {{question}} to a SQL query ",
                "deployment_name": "gpt-4o",
                "temperature": 0.0,
                "top_p": 1.0,
                "max_tokens": 3000,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "chat_history": [],
                "question": "Which one is the most profitable product?",
                "_inputs_to_escape": [
                  "chat_history",
                  "question"
                ]
              },
              "output": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
              "start_time": 1724066598.104039,
              "end_time": 1724066599.956369,
              "error": null,
              "children": [
                {
                  "name": "openai_chat",
                  "type": "LLM",
                  "inputs": {
                    "model": "gpt-4o",
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are an expert at writing SQL queries throught a given Natural Language description of OBJECTIVE from the user. \nThe following structure has the Table schema you MUST use to transform the input to a SQL query:\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), product_description TEXT, product_price DECIMAL(10, 2), product_category VARCHAR(50), in_stock BIT);\n\nCREATE TABLE sellers (seller_id INT PRIMARY KEY, seller_name VARCHAR(100), seller_email VARCHAR(100), seller_contact_number VARCHAR(15), seller_address TEXT);\n\nCREATE TABLE sales_transaction (transaction_id INT PRIMARY KEY, product_id INT, seller_id INT, quantity INT, transaction_date DATE, FOREIGN KEY (product_id) REFERENCES products(product_id), FOREIGN KEY (seller_id) REFERENCES sellers(seller_id));\n\n---\nYou will generate a SQL SELECT query that is compatible with Transact-SQL and achieves the given OBJECTIVE. \nYou use only the tables and views described in the given SCHEMA.\nThe output must be a SQL SELECT query.\nUse Postgres-SQL syntax to write the query compatible with Azure Postgresql Database syntax.\n\nChat history:\n\nWhen exists a chat history, consider the last sql query to adapt the new ask."
                      },
                      {
                        "role": "user",
                        "content": "Transform the input: Which one is the most profitable product? to a SQL query"
                      }
                    ],
                    "temperature": 0.0,
                    "top_p": 1.0,
                    "n": 1,
                    "stream": false,
                    "presence_penalty": 0.0,
                    "frequency_penalty": 0.0,
                    "user": "",
                    "max_tokens": 3000
                  },
                  "output": {
                    "id": "chatcmpl-9xoDG0eOyxwwqZxOAwCpzD13ygMCc",
                    "choices": [
                      {
                        "finish_reason": "stop",
                        "index": 0,
                        "logprobs": null,
                        "message": {
                          "content": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
                          "role": "assistant",
                          "function_call": null,
                          "tool_calls": null
                        },
                        "content_filter_results": {
                          "hate": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "self_harm": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "sexual": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "violence": {
                            "filtered": false,
                            "severity": "safe"
                          }
                        }
                      }
                    ],
                    "created": 1724041398,
                    "model": "gpt-4o-2024-05-13",
                    "object": "chat.completion",
                    "service_tier": null,
                    "system_fingerprint": "fp_abc28019ad",
                    "usage": {
                      "completion_tokens": 78,
                      "prompt_tokens": 276,
                      "total_tokens": 354
                    },
                    "prompt_filter_results": [
                      {
                        "prompt_index": 0,
                        "content_filter_results": {
                          "hate": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "self_harm": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "sexual": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "violence": {
                            "filtered": false,
                            "severity": "safe"
                          }
                        }
                      }
                    ]
                  },
                  "start_time": 1724066598.11998,
                  "end_time": 1724066599.956026,
                  "error": null,
                  "children": [],
                  "node_name": null,
                  "parent_id": "327362fe-4792-4be4-aceb-fcb24922d9a4",
                  "id": "3642e2c3-b527-4ba4-8f91-79e311554629",
                  "function": "openai.resources.chat.completions.Completions.create",
                  "system_metrics": {
                    "completion_tokens": 78,
                    "prompt_tokens": 276,
                    "total_tokens": 354
                  }
                }
              ],
              "node_name": "chat_nl2sql",
              "parent_id": "",
              "id": "327362fe-4792-4be4-aceb-fcb24922d9a4",
              "function": "AzureOpenAI.chat",
              "system_metrics": {
                "completion_tokens": 78,
                "prompt_tokens": 276,
                "total_tokens": 354
              }
            },
            {
              "name": "AzureOpenAI.chat",
              "type": "Function",
              "inputs": {
                "prompt": "system:\nYou are an expert at extracting a SQL query and ensures it is a Postgres-SQL dialect. \n---\nYou will be presented with a SQL query in any ANSI SQL dialect and you will need to convert it to Postgres-SQL dialect.\n\nYou always need to convert the SQL query to the latest version Postgres-SQL dialect compatible with Azure POstgresql Database.\nIf the given SQL query is already in Postgres-SQL dialect, you only return the same query.\n---\nUse the following format to return the SQL query in Postgres-SQL dialect:\nSELECT * FROM table_name;\n\nReturn the SQL query ONLY. Do not include any additional explanation or text.\n\nuser:\n{{sql_query}}",
                "deployment_name": "gpt-4o",
                "temperature": 0.0,
                "top_p": 1.0,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "sql_query": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
                "max_tokens": 3000
              },
              "output": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;",
              "start_time": 1724066599.972347,
              "end_time": 1724066601.737003,
              "error": null,
              "children": [
                {
                  "name": "openai_chat",
                  "type": "LLM",
                  "inputs": {
                    "model": "gpt-4o",
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are an expert at extracting a SQL query and ensures it is a Postgres-SQL dialect. \n---\nYou will be presented with a SQL query in any ANSI SQL dialect and you will need to convert it to Postgres-SQL dialect.\n\nYou always need to convert the SQL query to the latest version Postgres-SQL dialect compatible with Azure POstgresql Database.\nIf the given SQL query is already in Postgres-SQL dialect, you only return the same query.\n---\nUse the following format to return the SQL query in Postgres-SQL dialect:\nSELECT * FROM table_name;\n\nReturn the SQL query ONLY. Do not include any additional explanation or text."
                      },
                      {
                        "role": "user",
                        "content": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```"
                      }
                    ],
                    "temperature": 0.0,
                    "top_p": 1.0,
                    "n": 1,
                    "stream": false,
                    "presence_penalty": 0.0,
                    "frequency_penalty": 0.0,
                    "user": "",
                    "max_tokens": 3000
                  },
                  "output": {
                    "id": "chatcmpl-9xoDIByNfXITSOYWqVWkQKmArciTy",
                    "choices": [
                      {
                        "finish_reason": "stop",
                        "index": 0,
                        "logprobs": null,
                        "message": {
                          "content": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;",
                          "role": "assistant",
                          "function_call": null,
                          "tool_calls": null
                        },
                        "content_filter_results": {
                          "hate": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "self_harm": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "sexual": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "violence": {
                            "filtered": false,
                            "severity": "safe"
                          }
                        }
                      }
                    ],
                    "created": 1724041400,
                    "model": "gpt-4o-2024-05-13",
                    "object": "chat.completion",
                    "service_tier": null,
                    "system_fingerprint": "fp_abc28019ad",
                    "usage": {
                      "completion_tokens": 74,
                      "prompt_tokens": 222,
                      "total_tokens": 296
                    },
                    "prompt_filter_results": [
                      {
                        "prompt_index": 0,
                        "content_filter_results": {
                          "hate": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "self_harm": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "sexual": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "violence": {
                            "filtered": false,
                            "severity": "safe"
                          }
                        }
                      }
                    ]
                  },
                  "start_time": 1724066599.97713,
                  "end_time": 1724066601.73669,
                  "error": null,
                  "children": [],
                  "node_name": null,
                  "parent_id": "22920c86-95de-49dd-84b8-5341008450d7",
                  "id": "b943cb75-0103-4ca6-bdc0-c9cc9847b1b3",
                  "function": "openai.resources.chat.completions.Completions.create",
                  "system_metrics": {
                    "completion_tokens": 74,
                    "prompt_tokens": 222,
                    "total_tokens": 296
                  }
                }
              ],
              "node_name": "EnsureSQL",
              "parent_id": "",
              "id": "22920c86-95de-49dd-84b8-5341008450d7",
              "function": "AzureOpenAI.chat",
              "system_metrics": {
                "completion_tokens": 74,
                "prompt_tokens": 222,
                "total_tokens": 296
              }
            },
            {
              "name": "query_db",
              "type": "Function",
              "inputs": {
                "SQL_conn": "SQL_CONN",
                "sql_query": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;"
              },
              "output": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
              "start_time": 1724066601.741419,
              "end_time": 1724066604.32883,
              "error": null,
              "children": [],
              "node_name": "QueryDB",
              "parent_id": "",
              "id": "20dbf893-a51f-4cc8-85f3-557bd5536a60",
              "function": "query_db",
              "system_metrics": {}
            },
            {
              "name": "AzureOpenAI.chat",
              "type": "Function",
              "inputs": {
                "prompt": "system:\nYou are an assistant who helps create Natural Language responses using databases outputs.\n\nYou will receive as a input the respective database output.\nFollow the instructions below to create the response:\n- Format your response as a Markdown. Format the database output as a HTML table.\n\nExample:\n```\n<table>\\n\n<tr>\\n\n<th>product_id</th>\\n\n<th>product_name</th>\\n\n<th>total_revenue</th>\\n\n</tr>\n<tr>\\n\n<td>1</td>\\n\n<td>Apple iPhone 13</td>\\n\n<td>204997.95</td>\\n\n</tr>\\n</table>```\n\nIf for any reason, you haven't received a database output, respond with the following message:\n\"Sorry, I wasn't able to retrieve the database output. Please review the inputs and try again.\"\n\nuser:\nDatabase Output: {{db_result}}",
                "deployment_name": "gpt-4o",
                "temperature": 0.0,
                "top_p": 1.0,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "db_result": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
                "max_tokens": 3500,
                "stream": false
              },
              "output": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
              "start_time": 1724066604.331457,
              "end_time": 1724066605.66463,
              "error": null,
              "children": [
                {
                  "name": "openai_chat",
                  "type": "LLM",
                  "inputs": {
                    "model": "gpt-4o",
                    "messages": [
                      {
                        "role": "system",
                        "content": "You are an assistant who helps create Natural Language responses using databases outputs.\n\nYou will receive as a input the respective database output.\nFollow the instructions below to create the response:\n- Format your response as a Markdown. Format the database output as a HTML table.\n\nExample:\n```\n<table>\\n\n<tr>\\n\n<th>product_id</th>\\n\n<th>product_name</th>\\n\n<th>total_revenue</th>\\n\n</tr>\n<tr>\\n\n<td>1</td>\\n\n<td>Apple iPhone 13</td>\\n\n<td>204997.95</td>\\n\n</tr>\\n</table>```\n\nIf for any reason, you haven't received a database output, respond with the following message:\n\"Sorry, I wasn't able to retrieve the database output. Please review the inputs and try again.\""
                      },
                      {
                        "role": "user",
                        "content": "Database Output: SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]"
                      }
                    ],
                    "temperature": 0.0,
                    "top_p": 1.0,
                    "n": 1,
                    "stream": false,
                    "presence_penalty": 0.0,
                    "frequency_penalty": 0.0,
                    "user": "",
                    "max_tokens": 3500
                  },
                  "output": {
                    "id": "chatcmpl-9xoDMqEc2a5ouFAWDorinPP9eww44",
                    "choices": [
                      {
                        "finish_reason": "stop",
                        "index": 0,
                        "logprobs": null,
                        "message": {
                          "content": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
                          "role": "assistant",
                          "function_call": null,
                          "tool_calls": null
                        },
                        "content_filter_results": {
                          "hate": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "self_harm": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "sexual": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "violence": {
                            "filtered": false,
                            "severity": "safe"
                          }
                        }
                      }
                    ],
                    "created": 1724041404,
                    "model": "gpt-4o-2024-05-13",
                    "object": "chat.completion",
                    "service_tier": null,
                    "system_fingerprint": "fp_abc28019ad",
                    "usage": {
                      "completion_tokens": 62,
                      "prompt_tokens": 224,
                      "total_tokens": 286
                    },
                    "prompt_filter_results": [
                      {
                        "prompt_index": 0,
                        "content_filter_results": {
                          "hate": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "self_harm": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "sexual": {
                            "filtered": false,
                            "severity": "safe"
                          },
                          "violence": {
                            "filtered": false,
                            "severity": "safe"
                          }
                        }
                      }
                    ]
                  },
                  "start_time": 1724066604.33576,
                  "end_time": 1724066605.664251,
                  "error": null,
                  "children": [],
                  "node_name": null,
                  "parent_id": "fc07c0ea-631b-4ad5-b166-29b31a37fbcc",
                  "id": "4f444104-4ea2-465b-8457-2fcceb0150be",
                  "function": "openai.resources.chat.completions.Completions.create",
                  "system_metrics": {
                    "completion_tokens": 62,
                    "prompt_tokens": 224,
                    "total_tokens": 286
                  }
                }
              ],
              "node_name": "FormatResponse",
              "parent_id": "",
              "id": "fc07c0ea-631b-4ad5-b166-29b31a37fbcc",
              "function": "AzureOpenAI.chat",
              "system_metrics": {
                "completion_tokens": 62,
                "prompt_tokens": 224,
                "total_tokens": 286
              }
            }
          ],
          "system_metrics": {
            "duration": 7.569106,
            "prompt_tokens": 722,
            "completion_tokens": 214,
            "total_tokens": 936
          },
          "inputs": {
            "chat_history": [],
            "question": "Which one is the most profitable product?"
          },
          "output": {
            "database_output": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
            "role": "assistant",
            "sql_query": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;"
          },
          "error": null
        }
      ],
      "name": "",
      "description": "",
      "tags": null,
      "system_metrics": {
        "duration": 7.569106,
        "prompt_tokens": 722,
        "completion_tokens": 214,
        "total_tokens": 936
      },
      "result": {
        "database_output": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
        "role": "assistant",
        "sql_query": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;"
      },
      "upload_metrics": false,
      "otel_trace_id": "0x1ab3831207eeab90b5f94835172b8e27",
      "message_format": "basic"
    }
  ],
  "node_runs": [
    {
      "node": "chat_nl2sql",
      "flow_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a",
      "run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_chat_nl2sql_0",
      "status": "Completed",
      "inputs": {
        "deployment_name": "gpt-4o",
        "temperature": 0.0,
        "top_p": 1.0,
        "max_tokens": 3000,
        "presence_penalty": 0.0,
        "frequency_penalty": 0.0,
        "chat_history": [],
        "question": "Which one is the most profitable product?",
        "_inputs_to_escape": [
          "chat_history",
          "question"
        ]
      },
      "output": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
      "metrics": null,
      "error": null,
      "parent_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_0",
      "start_time": "2024-08-19T04:23:18.103720Z",
      "end_time": "2024-08-19T04:23:19.959267Z",
      "index": 0,
      "api_calls": [
        {
          "name": "AzureOpenAI.chat",
          "type": "Function",
          "inputs": {
            "prompt": "system:\nYou are an expert at writing SQL queries throught a given Natural Language description of OBJECTIVE from the user. \nThe following structure has the Table schema you MUST use to transform the input to a SQL query:\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), product_description TEXT, product_price DECIMAL(10, 2), product_category VARCHAR(50), in_stock BIT);\n\nCREATE TABLE sellers (seller_id INT PRIMARY KEY, seller_name VARCHAR(100), seller_email VARCHAR(100), seller_contact_number VARCHAR(15), seller_address TEXT);\n\nCREATE TABLE sales_transaction (transaction_id INT PRIMARY KEY, product_id INT, seller_id INT, quantity INT, transaction_date DATE, FOREIGN KEY (product_id) REFERENCES products(product_id), FOREIGN KEY (seller_id) REFERENCES sellers(seller_id));\n\n---\nYou will generate a SQL SELECT query that is compatible with Transact-SQL and achieves the given OBJECTIVE. \nYou use only the tables and views described in the given SCHEMA.\nThe output must be a SQL SELECT query.\nUse Postgres-SQL syntax to write the query compatible with Azure Postgresql Database syntax.\n\nChat history:\n{% for item in chat_history %}\n{{item}}\n{% endfor %}\n\nWhen exists a chat history, consider the last sql query to adapt the new ask.\n\nuser:\nTransform the input: {{question}} to a SQL query ",
            "deployment_name": "gpt-4o",
            "temperature": 0.0,
            "top_p": 1.0,
            "max_tokens": 3000,
            "presence_penalty": 0.0,
            "frequency_penalty": 0.0,
            "chat_history": [],
            "question": "Which one is the most profitable product?",
            "_inputs_to_escape": [
              "chat_history",
              "question"
            ]
          },
          "output": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
          "start_time": 1724066598.104039,
          "end_time": 1724066599.956369,
          "error": null,
          "children": [
            {
              "name": "openai_chat",
              "type": "LLM",
              "inputs": {
                "model": "gpt-4o",
                "messages": [
                  {
                    "role": "system",
                    "content": "You are an expert at writing SQL queries throught a given Natural Language description of OBJECTIVE from the user. \nThe following structure has the Table schema you MUST use to transform the input to a SQL query:\n\nCREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), product_description TEXT, product_price DECIMAL(10, 2), product_category VARCHAR(50), in_stock BIT);\n\nCREATE TABLE sellers (seller_id INT PRIMARY KEY, seller_name VARCHAR(100), seller_email VARCHAR(100), seller_contact_number VARCHAR(15), seller_address TEXT);\n\nCREATE TABLE sales_transaction (transaction_id INT PRIMARY KEY, product_id INT, seller_id INT, quantity INT, transaction_date DATE, FOREIGN KEY (product_id) REFERENCES products(product_id), FOREIGN KEY (seller_id) REFERENCES sellers(seller_id));\n\n---\nYou will generate a SQL SELECT query that is compatible with Transact-SQL and achieves the given OBJECTIVE. \nYou use only the tables and views described in the given SCHEMA.\nThe output must be a SQL SELECT query.\nUse Postgres-SQL syntax to write the query compatible with Azure Postgresql Database syntax.\n\nChat history:\n\nWhen exists a chat history, consider the last sql query to adapt the new ask."
                  },
                  {
                    "role": "user",
                    "content": "Transform the input: Which one is the most profitable product? to a SQL query"
                  }
                ],
                "temperature": 0.0,
                "top_p": 1.0,
                "n": 1,
                "stream": false,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "user": "",
                "max_tokens": 3000
              },
              "output": {
                "id": "chatcmpl-9xoDG0eOyxwwqZxOAwCpzD13ygMCc",
                "choices": [
                  {
                    "finish_reason": "stop",
                    "index": 0,
                    "logprobs": null,
                    "message": {
                      "content": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
                      "role": "assistant",
                      "function_call": null,
                      "tool_calls": null
                    },
                    "content_filter_results": {
                      "hate": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "self_harm": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "sexual": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "violence": {
                        "filtered": false,
                        "severity": "safe"
                      }
                    }
                  }
                ],
                "created": 1724041398,
                "model": "gpt-4o-2024-05-13",
                "object": "chat.completion",
                "service_tier": null,
                "system_fingerprint": "fp_abc28019ad",
                "usage": {
                  "completion_tokens": 78,
                  "prompt_tokens": 276,
                  "total_tokens": 354
                },
                "prompt_filter_results": [
                  {
                    "prompt_index": 0,
                    "content_filter_results": {
                      "hate": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "self_harm": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "sexual": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "violence": {
                        "filtered": false,
                        "severity": "safe"
                      }
                    }
                  }
                ]
              },
              "start_time": 1724066598.11998,
              "end_time": 1724066599.956026,
              "error": null,
              "children": [],
              "node_name": null,
              "parent_id": "327362fe-4792-4be4-aceb-fcb24922d9a4",
              "id": "3642e2c3-b527-4ba4-8f91-79e311554629",
              "function": "openai.resources.chat.completions.Completions.create",
              "system_metrics": {
                "completion_tokens": 78,
                "prompt_tokens": 276,
                "total_tokens": 354
              }
            }
          ],
          "node_name": "chat_nl2sql",
          "parent_id": "",
          "id": "327362fe-4792-4be4-aceb-fcb24922d9a4",
          "function": "AzureOpenAI.chat",
          "system_metrics": {
            "completion_tokens": 78,
            "prompt_tokens": 276,
            "total_tokens": 354
          }
        }
      ],
      "cached_run_id": null,
      "cached_flow_run_id": null,
      "logs": {
        "stdout": "",
        "stderr": ""
      },
      "system_metrics": {
        "completion_tokens": 78,
        "prompt_tokens": 276,
        "total_tokens": 354,
        "duration": 1.855547
      },
      "result": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
      "message_format": "basic"
    },
    {
      "node": "EnsureSQL",
      "flow_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a",
      "run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_EnsureSQL_0",
      "status": "Completed",
      "inputs": {
        "deployment_name": "gpt-4o",
        "temperature": 0.0,
        "top_p": 1.0,
        "presence_penalty": 0.0,
        "frequency_penalty": 0.0,
        "sql_query": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
        "max_tokens": 3000
      },
      "output": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;",
      "metrics": null,
      "error": null,
      "parent_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_0",
      "start_time": "2024-08-19T04:23:19.971960Z",
      "end_time": "2024-08-19T04:23:21.739117Z",
      "index": 0,
      "api_calls": [
        {
          "name": "AzureOpenAI.chat",
          "type": "Function",
          "inputs": {
            "prompt": "system:\nYou are an expert at extracting a SQL query and ensures it is a Postgres-SQL dialect. \n---\nYou will be presented with a SQL query in any ANSI SQL dialect and you will need to convert it to Postgres-SQL dialect.\n\nYou always need to convert the SQL query to the latest version Postgres-SQL dialect compatible with Azure POstgresql Database.\nIf the given SQL query is already in Postgres-SQL dialect, you only return the same query.\n---\nUse the following format to return the SQL query in Postgres-SQL dialect:\nSELECT * FROM table_name;\n\nReturn the SQL query ONLY. Do not include any additional explanation or text.\n\nuser:\n{{sql_query}}",
            "deployment_name": "gpt-4o",
            "temperature": 0.0,
            "top_p": 1.0,
            "presence_penalty": 0.0,
            "frequency_penalty": 0.0,
            "sql_query": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```",
            "max_tokens": 3000
          },
          "output": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;",
          "start_time": 1724066599.972347,
          "end_time": 1724066601.737003,
          "error": null,
          "children": [
            {
              "name": "openai_chat",
              "type": "LLM",
              "inputs": {
                "model": "gpt-4o",
                "messages": [
                  {
                    "role": "system",
                    "content": "You are an expert at extracting a SQL query and ensures it is a Postgres-SQL dialect. \n---\nYou will be presented with a SQL query in any ANSI SQL dialect and you will need to convert it to Postgres-SQL dialect.\n\nYou always need to convert the SQL query to the latest version Postgres-SQL dialect compatible with Azure POstgresql Database.\nIf the given SQL query is already in Postgres-SQL dialect, you only return the same query.\n---\nUse the following format to return the SQL query in Postgres-SQL dialect:\nSELECT * FROM table_name;\n\nReturn the SQL query ONLY. Do not include any additional explanation or text."
                  },
                  {
                    "role": "user",
                    "content": "```sql\nSELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;\n```"
                  }
                ],
                "temperature": 0.0,
                "top_p": 1.0,
                "n": 1,
                "stream": false,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "user": "",
                "max_tokens": 3000
              },
              "output": {
                "id": "chatcmpl-9xoDIByNfXITSOYWqVWkQKmArciTy",
                "choices": [
                  {
                    "finish_reason": "stop",
                    "index": 0,
                    "logprobs": null,
                    "message": {
                      "content": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;",
                      "role": "assistant",
                      "function_call": null,
                      "tool_calls": null
                    },
                    "content_filter_results": {
                      "hate": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "self_harm": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "sexual": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "violence": {
                        "filtered": false,
                        "severity": "safe"
                      }
                    }
                  }
                ],
                "created": 1724041400,
                "model": "gpt-4o-2024-05-13",
                "object": "chat.completion",
                "service_tier": null,
                "system_fingerprint": "fp_abc28019ad",
                "usage": {
                  "completion_tokens": 74,
                  "prompt_tokens": 222,
                  "total_tokens": 296
                },
                "prompt_filter_results": [
                  {
                    "prompt_index": 0,
                    "content_filter_results": {
                      "hate": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "self_harm": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "sexual": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "violence": {
                        "filtered": false,
                        "severity": "safe"
                      }
                    }
                  }
                ]
              },
              "start_time": 1724066599.97713,
              "end_time": 1724066601.73669,
              "error": null,
              "children": [],
              "node_name": null,
              "parent_id": "22920c86-95de-49dd-84b8-5341008450d7",
              "id": "b943cb75-0103-4ca6-bdc0-c9cc9847b1b3",
              "function": "openai.resources.chat.completions.Completions.create",
              "system_metrics": {
                "completion_tokens": 74,
                "prompt_tokens": 222,
                "total_tokens": 296
              }
            }
          ],
          "node_name": "EnsureSQL",
          "parent_id": "",
          "id": "22920c86-95de-49dd-84b8-5341008450d7",
          "function": "AzureOpenAI.chat",
          "system_metrics": {
            "completion_tokens": 74,
            "prompt_tokens": 222,
            "total_tokens": 296
          }
        }
      ],
      "cached_run_id": null,
      "cached_flow_run_id": null,
      "logs": {
        "stdout": "",
        "stderr": ""
      },
      "system_metrics": {
        "completion_tokens": 74,
        "prompt_tokens": 222,
        "total_tokens": 296,
        "duration": 1.767157
      },
      "result": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;",
      "message_format": "basic"
    },
    {
      "node": "QueryDB",
      "flow_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a",
      "run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_QueryDB_0",
      "status": "Completed",
      "inputs": {
        "SQL_conn": "SQL_CONN",
        "sql_query": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;"
      },
      "output": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
      "metrics": null,
      "error": null,
      "parent_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_0",
      "start_time": "2024-08-19T04:23:21.741111Z",
      "end_time": "2024-08-19T04:23:24.329635Z",
      "index": 0,
      "api_calls": [
        {
          "name": "query_db",
          "type": "Function",
          "inputs": {
            "SQL_conn": "SQL_CONN",
            "sql_query": "SELECT \n    p.product_id, \n    p.product_name, \n    SUM(st.quantity * p.product_price) AS total_revenue\nFROM \n    products p\nJOIN \n    sales_transaction st ON p.product_id = st.product_id\nGROUP BY \n    p.product_id, p.product_name\nORDER BY \n    total_revenue DESC\nLIMIT 1;"
          },
          "output": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
          "start_time": 1724066601.741419,
          "end_time": 1724066604.32883,
          "error": null,
          "children": [],
          "node_name": "QueryDB",
          "parent_id": "",
          "id": "20dbf893-a51f-4cc8-85f3-557bd5536a60",
          "function": "query_db",
          "system_metrics": {}
        }
      ],
      "cached_run_id": null,
      "cached_flow_run_id": null,
      "logs": {
        "stdout": "[2024-08-19T04:23:24+0000] [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]\n",
        "stderr": ""
      },
      "system_metrics": {
        "duration": 2.588524
      },
      "result": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
      "message_format": "basic"
    },
    {
      "node": "FormatResponse",
      "flow_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a",
      "run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_FormatResponse_0",
      "status": "Completed",
      "inputs": {
        "deployment_name": "gpt-4o",
        "temperature": 0.0,
        "top_p": 1.0,
        "presence_penalty": 0.0,
        "frequency_penalty": 0.0,
        "db_result": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
        "max_tokens": 3500
      },
      "output": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
      "metrics": null,
      "error": null,
      "parent_run_id": "a6139d23-e3c2-4f07-a247-bcf9731ba91a_0",
      "start_time": "2024-08-19T04:23:24.331199Z",
      "end_time": "2024-08-19T04:23:25.668077Z",
      "index": 0,
      "api_calls": [
        {
          "name": "AzureOpenAI.chat",
          "type": "Function",
          "inputs": {
            "prompt": "system:\nYou are an assistant who helps create Natural Language responses using databases outputs.\n\nYou will receive as a input the respective database output.\nFollow the instructions below to create the response:\n- Format your response as a Markdown. Format the database output as a HTML table.\n\nExample:\n```\n<table>\\n\n<tr>\\n\n<th>product_id</th>\\n\n<th>product_name</th>\\n\n<th>total_revenue</th>\\n\n</tr>\n<tr>\\n\n<td>1</td>\\n\n<td>Apple iPhone 13</td>\\n\n<td>204997.95</td>\\n\n</tr>\\n</table>```\n\nIf for any reason, you haven't received a database output, respond with the following message:\n\"Sorry, I wasn't able to retrieve the database output. Please review the inputs and try again.\"\n\nuser:\nDatabase Output: {{db_result}}",
            "deployment_name": "gpt-4o",
            "temperature": 0.0,
            "top_p": 1.0,
            "presence_penalty": 0.0,
            "frequency_penalty": 0.0,
            "db_result": "SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]",
            "max_tokens": 3500,
            "stream": false
          },
          "output": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
          "start_time": 1724066604.331457,
          "end_time": 1724066605.66463,
          "error": null,
          "children": [
            {
              "name": "openai_chat",
              "type": "LLM",
              "inputs": {
                "model": "gpt-4o",
                "messages": [
                  {
                    "role": "system",
                    "content": "You are an assistant who helps create Natural Language responses using databases outputs.\n\nYou will receive as a input the respective database output.\nFollow the instructions below to create the response:\n- Format your response as a Markdown. Format the database output as a HTML table.\n\nExample:\n```\n<table>\\n\n<tr>\\n\n<th>product_id</th>\\n\n<th>product_name</th>\\n\n<th>total_revenue</th>\\n\n</tr>\n<tr>\\n\n<td>1</td>\\n\n<td>Apple iPhone 13</td>\\n\n<td>204997.95</td>\\n\n</tr>\\n</table>```\n\nIf for any reason, you haven't received a database output, respond with the following message:\n\"Sorry, I wasn't able to retrieve the database output. Please review the inputs and try again.\""
                  },
                  {
                    "role": "user",
                    "content": "Database Output: SQL Query: [{'product_id': 1, 'product_name': 'Apple iPhone 13', 'total_revenue': Decimal('204997.95')}]"
                  }
                ],
                "temperature": 0.0,
                "top_p": 1.0,
                "n": 1,
                "stream": false,
                "presence_penalty": 0.0,
                "frequency_penalty": 0.0,
                "user": "",
                "max_tokens": 3500
              },
              "output": {
                "id": "chatcmpl-9xoDMqEc2a5ouFAWDorinPP9eww44",
                "choices": [
                  {
                    "finish_reason": "stop",
                    "index": 0,
                    "logprobs": null,
                    "message": {
                      "content": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
                      "role": "assistant",
                      "function_call": null,
                      "tool_calls": null
                    },
                    "content_filter_results": {
                      "hate": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "self_harm": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "sexual": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "violence": {
                        "filtered": false,
                        "severity": "safe"
                      }
                    }
                  }
                ],
                "created": 1724041404,
                "model": "gpt-4o-2024-05-13",
                "object": "chat.completion",
                "service_tier": null,
                "system_fingerprint": "fp_abc28019ad",
                "usage": {
                  "completion_tokens": 62,
                  "prompt_tokens": 224,
                  "total_tokens": 286
                },
                "prompt_filter_results": [
                  {
                    "prompt_index": 0,
                    "content_filter_results": {
                      "hate": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "self_harm": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "sexual": {
                        "filtered": false,
                        "severity": "safe"
                      },
                      "violence": {
                        "filtered": false,
                        "severity": "safe"
                      }
                    }
                  }
                ]
              },
              "start_time": 1724066604.33576,
              "end_time": 1724066605.664251,
              "error": null,
              "children": [],
              "node_name": null,
              "parent_id": "fc07c0ea-631b-4ad5-b166-29b31a37fbcc",
              "id": "4f444104-4ea2-465b-8457-2fcceb0150be",
              "function": "openai.resources.chat.completions.Completions.create",
              "system_metrics": {
                "completion_tokens": 62,
                "prompt_tokens": 224,
                "total_tokens": 286
              }
            }
          ],
          "node_name": "FormatResponse",
          "parent_id": "",
          "id": "fc07c0ea-631b-4ad5-b166-29b31a37fbcc",
          "function": "AzureOpenAI.chat",
          "system_metrics": {
            "completion_tokens": 62,
            "prompt_tokens": 224,
            "total_tokens": 286
          }
        }
      ],
      "cached_run_id": null,
      "cached_flow_run_id": null,
      "logs": {
        "stdout": "",
        "stderr": ""
      },
      "system_metrics": {
        "completion_tokens": 62,
        "prompt_tokens": 224,
        "total_tokens": 286,
        "duration": 1.336878
      },
      "result": "<table>\n<tr>\n<th>product_id</th>\n<th>product_name</th>\n<th>total_revenue</th>\n</tr>\n<tr>\n<td>1</td>\n<td>Apple iPhone 13</td>\n<td>204997.95</td>\n</tr>\n</table>",
      "message_format": "basic"
    }
  ]
}